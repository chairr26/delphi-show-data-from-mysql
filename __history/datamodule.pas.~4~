unit datamodule;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Phys.MySQL;

type
  Tdm = class(TDataModule)
    FDConn: TFDConnection;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    FDQuery1: TFDQuery;
    procedure KoneksiMySQL;
    Function OpenConnection:Boolean;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dm: Tdm;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

Function Tdm.OpenConnection:Boolean;
Var ConnString:String;
Begin
  try
    if FDConn.Connected = True then
      Begin
        result:=False;
      End
    Else
      Begin
        KoneksiMySQL;
      End;

  except
    result:=False;
  end;
End;



procedure Tdm.KoneksiMySQL;
Begin
  FDConn := TFDConnection.Create(Self);

  try
    FDConn.DriverName := 'MySQL';
    FDConn.Params.Add('Server=127.0.0.1');
    FDConn.Params.Add('Database=test');
    FDConn.Params.Add('User_name=umang');
    FDConn.Params.Add('Password=um4n9');
    FDConn.Params.Add('Port=3306');
    FDConn.LoginPrompt:=False;
    FDConn.Connected := True;
    FDQuery1:=TFDQuery.Create(Self);
    FDQuery1.Connection := FDConn;
  except
    //
  end;
End;


end.
